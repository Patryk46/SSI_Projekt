import math
import numpy as np
import random
import pandas as pd # csv files
import seaborn as sns # charts
sns.set_palette('husl')
mushroom =pd.read_csv('mushrooms.csv')
class DataProcessing:
    @staticmethod
    def shuffle(x):
        for i in range(len(x)-1,0,-1):
            j=random.randint(0,i)
            x.iloc[i],x.iloc[j]=x.iloc[j],x.iloc[i]
        return x
    @staticmethod
    def splitSet(x):
        split = int(len(x)*0.7)
        xTrain = x.iloc[:split, :]
        xVal = x.iloc[split:, :]
        return xTrain, xVal
    @staticmethod
    def normalize(Y):
        X = Y.copy()
        values = X.select_dtypes(exclude="object")
        columnNames = values.columns.tolist()
        for column in columnNames:
            data = X.loc[:, column]
            maximum = max(data)
            minimum = min(data)
            substractionMaxMin = maximum - minimum
            for row in range(0,len(X),1):
                value = (X.at[row, column] - minimum) / substractionMaxMin
                X.at[row, column] = value
        return X
